// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package db

import (
	"context"
)

const allCategories = `-- name: AllCategories :many
SELECT
  "name"
FROM
  categories
`

func (q *Queries) AllCategories(ctx context.Context) ([]string, error) {
	rows, err := q.db.Query(ctx, allCategories)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var name string
		if err := rows.Scan(&name); err != nil {
			return nil, err
		}
		items = append(items, name)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getCategoryCourses = `-- name: GetCategoryCourses :many
SELECT
  courses.title
FROM
  courses
  LEFT JOIN course_categories cc ON courses.id = cc.course_id
  LEFT JOIN categories ON cc.category_id = categories.id
WHERE
  categories.name = $1
`

func (q *Queries) GetCategoryCourses(ctx context.Context, name string) ([]string, error) {
	rows, err := q.db.Query(ctx, getCategoryCourses, name)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var title string
		if err := rows.Scan(&title); err != nil {
			return nil, err
		}
		items = append(items, title)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
